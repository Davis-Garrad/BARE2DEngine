BARE2D	/home/davis-dev/Documents/Programming/C++/CodingGithub/BARE2DEngine/Source/Renderer.hpp	/^namespace BARE2D {$/;"	namespace	line:9
Renderer	/home/davis-dev/Documents/Programming/C++/CodingGithub/BARE2DEngine/Source/Renderer.hpp	/^	class Renderer$/;"	class	line:15	namespace:BARE2D
Renderer	/home/davis-dev/Documents/Programming/C++/CodingGithub/BARE2DEngine/Source/Renderer.hpp	/^		Renderer();$/;"	prototype	line:18	class:BARE2D::Renderer	access:public	signature:()
~Renderer	/home/davis-dev/Documents/Programming/C++/CodingGithub/BARE2DEngine/Source/Renderer.hpp	/^		virtual ~Renderer();$/;"	prototype	line:19	class:BARE2D::Renderer	access:public	implementation:virtual	signature:()	returns:virtual 
begin	/home/davis-dev/Documents/Programming/C++/CodingGithub/BARE2DEngine/Source/Renderer.hpp	/^		virtual void begin();$/;"	prototype	line:24	class:BARE2D::Renderer	access:public	implementation:virtual	signature:()	returns:virtual void 
end	/home/davis-dev/Documents/Programming/C++/CodingGithub/BARE2DEngine/Source/Renderer.hpp	/^		virtual void end();$/;"	prototype	line:29	class:BARE2D::Renderer	access:public	implementation:virtual	signature:()	returns:virtual void 
init	/home/davis-dev/Documents/Programming/C++/CodingGithub/BARE2DEngine/Source/Renderer.hpp	/^		virtual void init();$/;"	prototype	line:34	class:BARE2D::Renderer	access:public	implementation:virtual	signature:()	returns:virtual void 
initUniforms	/home/davis-dev/Documents/Programming/C++/CodingGithub/BARE2DEngine/Source/Renderer.hpp	/^		virtual void initUniforms();$/;"	prototype	line:39	class:BARE2D::Renderer	access:public	implementation:virtual	signature:()	returns:virtual void 
destroy	/home/davis-dev/Documents/Programming/C++/CodingGithub/BARE2DEngine/Source/Renderer.hpp	/^		virtual void destroy();$/;"	prototype	line:44	class:BARE2D::Renderer	access:public	implementation:virtual	signature:()	returns:virtual void 
render	/home/davis-dev/Documents/Programming/C++/CodingGithub/BARE2DEngine/Source/Renderer.hpp	/^		virtual void render();$/;"	prototype	line:49	class:BARE2D::Renderer	access:public	implementation:virtual	signature:()	returns:virtual void 
getShader	/home/davis-dev/Documents/Programming/C++/CodingGithub/BARE2DEngine/Source/Renderer.hpp	/^		ShaderProgram* getShader();$/;"	prototype	line:51	class:BARE2D::Renderer	access:public	signature:()	returns:ShaderProgram 
preRender	/home/davis-dev/Documents/Programming/C++/CodingGithub/BARE2DEngine/Source/Renderer.hpp	/^		virtual void preRender() {};$/;"	function	line:57	class:BARE2D::Renderer	access:protected	implementation:virtual	signature:()	returns:virtual void 
createRenderBatches	/home/davis-dev/Documents/Programming/C++/CodingGithub/BARE2DEngine/Source/Renderer.hpp	/^		virtual void createRenderBatches() = 0;$/;"	prototype	line:62	class:BARE2D::Renderer	access:protected	implementation:pure virtual	signature:()	returns:virtual void 
m_shader	/home/davis-dev/Documents/Programming/C++/CodingGithub/BARE2DEngine/Source/Renderer.hpp	/^		ShaderProgram m_shader; \/\/ The shader to draw with.$/;"	member	line:64	class:BARE2D::Renderer	access:protected
m_vertexArrayObject	/home/davis-dev/Documents/Programming/C++/CodingGithub/BARE2DEngine/Source/Renderer.hpp	/^		VAO m_vertexArrayObject; \/\/ Holds all of the vertex buffer object info - the actual uploaded information.$/;"	member	line:65	class:BARE2D::Renderer	access:protected
m_batches	/home/davis-dev/Documents/Programming/C++/CodingGithub/BARE2DEngine/Source/Renderer.hpp	/^		std::vector<RenderBatch> m_batches; \/\/ Holds all glyphs (a renderbatch is equal to a drawn sprite, for example)$/;"	member	line:66	class:BARE2D::Renderer	access:protected
